buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
	}
}
plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
	id 'signing'
}

apply plugin: 'com.jfrog.bintray'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version as Object
group = project.maven_group

dependencies {
	//to change the versions see the gradle.properties file
	minecraft("com.mojang:minecraft:1.16.2-rc2")
	mappings("net.fabricmc:yarn:1.16.2-rc2+build.1:v2")
	modImplementation("net.fabricmc:fabric-loader:0.9.1+build.205")

	// Fabric API. This is technically optional, but you probably want it anyway.
	modCompileOnly("net.fabricmc.fabric-api:fabric-api:0.17.1+build.394-1.16")
	modRuntime("net.fabricmc.fabric-api:fabric-api:0.17.1+build.394-1.16")

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.

	//modImplementation("io.github.prospector:modmenu:1.14.6+build.31")
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

bintray {
	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_KEY')
	publications = ["mavenJava"]
	publish = true
	pkg {
		repo = "cool-mods"
		name = "LibCBE"
		licenses = ["CC0-1.0"]
		version {
			released = new Date()
			githubRepo = 'BoogieMonster1O1/libcbe'
			websiteUrl = 'https://github.com/BoogieMonster1O1/libcbe'
			issueTrackerUrl = 'https://github.com/BoogieMonster1O1/libcbe/issues'
			vcsUrl = 'https://github.com/BoogieMonster1O1/libcbe.git'
			gpg {
				sign = true
			}
		}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
			pom.withXml {
				def root = asNode()
				root.appendNode('description', 'Conditional Block Entities')
				root.appendNode('name', 'LibCBE')
				root.appendNode('url', 'https://github.com/BoogieMonster1O1/libcbe')
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
